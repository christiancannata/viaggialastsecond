<?php

namespace DoctrineProxies\__CG__\Meritocracy\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Company extends \Meritocracy\Entity\Company implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'name', 'mongoidIndustry', '' . "\0" . 'Meritocracy\\Entity\\Company' . "\0" . 'industry', 'foundationDate', 'male', 'website', 'female', 'employees', 'story', 'mission', 'vision', 'ageAverage', 'videoUrl', 'background', 'logo', 'logoSmall', 'facebookPixel', 'pregnantRange', 'permalink', 'isVisible', 'isPremium', 'users', 'sliders', 'events', 'scores', 'vacancies', 'team', 'addresses', '' . "\0" . 'Meritocracy\\Entity\\Company' . "\0" . 'city', '' . "\0" . 'Meritocracy\\Entity\\Company' . "\0" . 'language', 'cityPlainText', 'benefits', 'createdAt', 'updatedAt', 'rules', 'importId'];
        }

        return ['__isInitialized__', 'id', 'name', 'mongoidIndustry', '' . "\0" . 'Meritocracy\\Entity\\Company' . "\0" . 'industry', 'foundationDate', 'male', 'website', 'female', 'employees', 'story', 'mission', 'vision', 'ageAverage', 'videoUrl', 'background', 'logo', 'logoSmall', 'facebookPixel', 'pregnantRange', 'permalink', 'isVisible', 'isPremium', 'users', 'sliders', 'events', 'scores', 'vacancies', 'team', 'addresses', '' . "\0" . 'Meritocracy\\Entity\\Company' . "\0" . 'city', '' . "\0" . 'Meritocracy\\Entity\\Company' . "\0" . 'language', 'cityPlainText', 'benefits', 'createdAt', 'updatedAt', 'rules', 'importId'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Company $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getMongoidIndustry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMongoidIndustry', []);

        return parent::getMongoidIndustry();
    }

    /**
     * {@inheritDoc}
     */
    public function setMongoidIndustry($mongoidIndustry)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMongoidIndustry', [$mongoidIndustry]);

        return parent::setMongoidIndustry($mongoidIndustry);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsers', []);

        return parent::getUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsers($users)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsers', [$users]);

        return parent::setUsers($users);
    }

    /**
     * {@inheritDoc}
     */
    public function getMission()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMission', []);

        return parent::getMission();
    }

    /**
     * {@inheritDoc}
     */
    public function setMission($mission)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMission', [$mission]);

        return parent::setMission($mission);
    }

    /**
     * {@inheritDoc}
     */
    public function getEvents()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvents', []);

        return parent::getEvents();
    }

    /**
     * {@inheritDoc}
     */
    public function getWebsite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebsite', []);

        return parent::getWebsite();
    }

    /**
     * {@inheritDoc}
     */
    public function setWebsite($website)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWebsite', [$website]);

        return parent::setWebsite($website);
    }

    /**
     * {@inheritDoc}
     */
    public function setEvents($events)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEvents', [$events]);

        return parent::setEvents($events);
    }

    /**
     * {@inheritDoc}
     */
    public function getScores()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScores', []);

        return parent::getScores();
    }

    /**
     * {@inheritDoc}
     */
    public function setScores($scores)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScores', [$scores]);

        return parent::setScores($scores);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsPremium()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsPremium', []);

        return parent::getIsPremium();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsPremium($isPremium)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsPremium', [$isPremium]);

        return parent::setIsPremium($isPremium);
    }

    /**
     * {@inheritDoc}
     */
    public function getVacancies()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVacancies', []);

        return parent::getVacancies();
    }

    /**
     * {@inheritDoc}
     */
    public function setVacancies($vacancies)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVacancies', [$vacancies]);

        return parent::setVacancies($vacancies);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', []);

        return parent::getAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress($address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress', [$address]);

        return parent::setAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getBenefits()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBenefits', []);

        return parent::getBenefits();
    }

    /**
     * {@inheritDoc}
     */
    public function setBenefits($benefits)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBenefits', [$benefits]);

        return parent::setBenefits($benefits);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', []);

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity($city)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', [$city]);

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getCityPlainText()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCityPlainText', []);

        return parent::getCityPlainText();
    }

    /**
     * {@inheritDoc}
     */
    public function getIndustry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIndustry', []);

        return parent::getIndustry();
    }

    /**
     * {@inheritDoc}
     */
    public function setIndustry($industry)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIndustry', [$industry]);

        return parent::setIndustry($industry);
    }

    /**
     * {@inheritDoc}
     */
    public function setCityPlainText($cityPlainText)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCityPlainText', [$cityPlainText]);

        return parent::setCityPlainText($cityPlainText);
    }

    /**
     * {@inheritDoc}
     */
    public function getFoundationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFoundationDate', []);

        return parent::getFoundationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setFoundationDate($foundationDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFoundationDate', [$foundationDate]);

        return parent::setFoundationDate($foundationDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getMale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMale', []);

        return parent::getMale();
    }

    /**
     * {@inheritDoc}
     */
    public function setMale($male)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMale', [$male]);

        return parent::setMale($male);
    }

    /**
     * {@inheritDoc}
     */
    public function getFemale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFemale', []);

        return parent::getFemale();
    }

    /**
     * {@inheritDoc}
     */
    public function setFemale($female)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFemale', [$female]);

        return parent::setFemale($female);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmployees()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmployees', []);

        return parent::getEmployees();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmployees($employees)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmployees', [$employees]);

        return parent::setEmployees($employees);
    }

    /**
     * {@inheritDoc}
     */
    public function getStory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStory', []);

        return parent::getStory();
    }

    /**
     * {@inheritDoc}
     */
    public function setStory($story)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStory', [$story]);

        return parent::setStory($story);
    }

    /**
     * {@inheritDoc}
     */
    public function getVision()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVision', []);

        return parent::getVision();
    }

    /**
     * {@inheritDoc}
     */
    public function setVision($vision)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVision', [$vision]);

        return parent::setVision($vision);
    }

    /**
     * {@inheritDoc}
     */
    public function getAgeAverage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAgeAverage', []);

        return parent::getAgeAverage();
    }

    /**
     * {@inheritDoc}
     */
    public function setAgeAverage($ageAverage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAgeAverage', [$ageAverage]);

        return parent::setAgeAverage($ageAverage);
    }

    /**
     * {@inheritDoc}
     */
    public function getPregnantRange()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPregnantRange', []);

        return parent::getPregnantRange();
    }

    /**
     * {@inheritDoc}
     */
    public function setPregnantRange($pregnantRange)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPregnantRange', [$pregnantRange]);

        return parent::setPregnantRange($pregnantRange);
    }

    /**
     * {@inheritDoc}
     */
    public function getPermalink()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPermalink', []);

        return parent::getPermalink();
    }

    /**
     * {@inheritDoc}
     */
    public function setPermalink($permalink)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPermalink', [$permalink]);

        return parent::setPermalink($permalink);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsVisible()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsVisible', []);

        return parent::getIsVisible();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsVisible($isVisible)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsVisible', [$isVisible]);

        return parent::setIsVisible($isVisible);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddresses()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddresses', []);

        return parent::getAddresses();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddresses($addresses)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddresses', [$addresses]);

        return parent::setAddresses($addresses);
    }

    /**
     * {@inheritDoc}
     */
    public function addAddress($addresses)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAddress', [$addresses]);

        return parent::addAddress($addresses);
    }

    /**
     * {@inheritDoc}
     */
    public function getVideoUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVideoUrl', []);

        return parent::getVideoUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setVideoUrl($videoUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVideoUrl', [$videoUrl]);

        return parent::setVideoUrl($videoUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getBackground()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBackground', []);

        return parent::getBackground();
    }

    /**
     * {@inheritDoc}
     */
    public function setBackground($background)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBackground', [$background]);

        return parent::setBackground($background);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogo', []);

        return parent::getLogo();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogo($logo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogo', [$logo]);

        return parent::setLogo($logo);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogoSmall()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogoSmall', []);

        return parent::getLogoSmall();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogoSmall($logoSmall)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogoSmall', [$logoSmall]);

        return parent::setLogoSmall($logoSmall);
    }

    /**
     * {@inheritDoc}
     */
    public function getSliders()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSliders', []);

        return parent::getSliders();
    }

    /**
     * {@inheritDoc}
     */
    public function setSliders($sliders)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSliders', [$sliders]);

        return parent::setSliders($sliders);
    }

    /**
     * {@inheritDoc}
     */
    public function addSlide($sliders)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSlide', [$sliders]);

        return parent::addSlide($sliders);
    }

    /**
     * {@inheritDoc}
     */
    public function getTeam()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTeam', []);

        return parent::getTeam();
    }

    /**
     * {@inheritDoc}
     */
    public function setTeam($team)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTeam', [$team]);

        return parent::setTeam($team);
    }

    /**
     * {@inheritDoc}
     */
    public function addMemberTeam($team)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMemberTeam', [$team]);

        return parent::addMemberTeam($team);
    }

    /**
     * {@inheritDoc}
     */
    public function getFacebookPixel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFacebookPixel', []);

        return parent::getFacebookPixel();
    }

    /**
     * {@inheritDoc}
     */
    public function setFacebookPixel($facebookPixel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFacebookPixel', [$facebookPixel]);

        return parent::setFacebookPixel($facebookPixel);
    }

    /**
     * {@inheritDoc}
     */
    public function addBenefit($benefit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBenefit', [$benefit]);

        return parent::addBenefit($benefit);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguage', []);

        return parent::getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguage($language)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguage', [$language]);

        return parent::setLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function isComplete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isComplete', []);

        return parent::isComplete();
    }

    /**
     * {@inheritDoc}
     */
    public function uncompleteFields()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'uncompleteFields', []);

        return parent::uncompleteFields();
    }

    /**
     * {@inheritDoc}
     */
    public function getRules()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRules', []);

        return parent::getRules();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function generatePermalink($text)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'generatePermalink', [$text]);

        return parent::generatePermalink($text);
    }

    /**
     * {@inheritDoc}
     */
    public function getImportId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImportId', []);

        return parent::getImportId();
    }

    /**
     * {@inheritDoc}
     */
    public function setImportId($importId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImportId', [$importId]);

        return parent::setImportId($importId);
    }

}
