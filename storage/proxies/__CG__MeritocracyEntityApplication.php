<?php

namespace DoctrineProxies\__CG__\Meritocracy\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Application extends \Meritocracy\Entity\Application implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'rules', 'id', 'coverLetter', 'videoUrl', 'score', 'education', 'languages', 'fragmentation', 'jobFunctions', 'industries', 'general', 'seniorityAdjustment', 'workExperienceTotal', 'active', 'status', 'user', 'vacancy', 'events', 'scoreCvm', 'lastUpdateStatus', 'refererUrl', 'createdAt', 'updatedAt', 'importId'];
        }

        return ['__isInitialized__', 'rules', 'id', 'coverLetter', 'videoUrl', 'score', 'education', 'languages', 'fragmentation', 'jobFunctions', 'industries', 'general', 'seniorityAdjustment', 'workExperienceTotal', 'active', 'status', 'user', 'vacancy', 'events', 'scoreCvm', 'lastUpdateStatus', 'refererUrl', 'createdAt', 'updatedAt', 'importId'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Application $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getScore()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScore', []);

        return parent::getScore();
    }

    /**
     * {@inheritDoc}
     */
    public function setScore($score)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScore', [$score]);

        return parent::setScore($score);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getScoreCvm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScoreCvm', []);

        return parent::getScoreCvm();
    }

    /**
     * {@inheritDoc}
     */
    public function setScoreCvm($scoreCvm)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScoreCvm', [$scoreCvm]);

        return parent::setScoreCvm($scoreCvm);
    }

    /**
     * {@inheritDoc}
     */
    public function getVacancy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVacancy', []);

        return parent::getVacancy();
    }

    /**
     * {@inheritDoc}
     */
    public function setVacancy($vacancy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVacancy', [$vacancy]);

        return parent::setVacancy($vacancy);
    }

    /**
     * {@inheritDoc}
     */
    public function getEvents()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvents', []);

        return parent::getEvents();
    }

    /**
     * {@inheritDoc}
     */
    public function setEvents($events)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEvents', [$events]);

        return parent::setEvents($events);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', []);

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastUpdateStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastUpdateStatus', []);

        return parent::getLastUpdateStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastUpdateStatus($lastUpdateStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastUpdateStatus', [$lastUpdateStatus]);

        return parent::setLastUpdateStatus($lastUpdateStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getIndustries()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIndustries', []);

        return parent::getIndustries();
    }

    /**
     * {@inheritDoc}
     */
    public function setIndustries($industries)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIndustries', [$industries]);

        return parent::setIndustries($industries);
    }

    /**
     * {@inheritDoc}
     */
    public function getEducation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEducation', []);

        return parent::getEducation();
    }

    /**
     * {@inheritDoc}
     */
    public function setEducation($education)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEducation', [$education]);

        return parent::setEducation($education);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguages', []);

        return parent::getLanguages();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguages($languages)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguages', [$languages]);

        return parent::setLanguages($languages);
    }

    /**
     * {@inheritDoc}
     */
    public function getFragmentation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFragmentation', []);

        return parent::getFragmentation();
    }

    /**
     * {@inheritDoc}
     */
    public function setFragmentation($fragmentation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFragmentation', [$fragmentation]);

        return parent::setFragmentation($fragmentation);
    }

    /**
     * {@inheritDoc}
     */
    public function getJobFunctions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJobFunctions', []);

        return parent::getJobFunctions();
    }

    /**
     * {@inheritDoc}
     */
    public function setJobFunctions($jobFunctions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJobFunctions', [$jobFunctions]);

        return parent::setJobFunctions($jobFunctions);
    }

    /**
     * {@inheritDoc}
     */
    public function getGeneral()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGeneral', []);

        return parent::getGeneral();
    }

    /**
     * {@inheritDoc}
     */
    public function setGeneral($general)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGeneral', [$general]);

        return parent::setGeneral($general);
    }

    /**
     * {@inheritDoc}
     */
    public function getSeniorityAdjustment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSeniorityAdjustment', []);

        return parent::getSeniorityAdjustment();
    }

    /**
     * {@inheritDoc}
     */
    public function setSeniorityAdjustment($seniorityAdjustment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSeniorityAdjustment', [$seniorityAdjustment]);

        return parent::setSeniorityAdjustment($seniorityAdjustment);
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkExperienceTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWorkExperienceTotal', []);

        return parent::getWorkExperienceTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function setWorkExperienceTotal($workExperienceTotal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWorkExperienceTotal', [$workExperienceTotal]);

        return parent::setWorkExperienceTotal($workExperienceTotal);
    }

    /**
     * {@inheritDoc}
     */
    public function getCoverLetter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCoverLetter', []);

        return parent::getCoverLetter();
    }

    /**
     * {@inheritDoc}
     */
    public function setCoverLetter($coverLetter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCoverLetter', [$coverLetter]);

        return parent::setCoverLetter($coverLetter);
    }

    /**
     * {@inheritDoc}
     */
    public function getVideoUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVideoUrl', []);

        return parent::getVideoUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setVideoUrl($videoUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVideoUrl', [$videoUrl]);

        return parent::setVideoUrl($videoUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getRules()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRules', []);

        return parent::getRules();
    }

    /**
     * {@inheritDoc}
     */
    public function setRules($rules)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRules', [$rules]);

        return parent::setRules($rules);
    }

    /**
     * {@inheritDoc}
     */
    public function getRefererUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRefererUrl', []);

        return parent::getRefererUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setRefererUrl($refererUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRefererUrl', [$refererUrl]);

        return parent::setRefererUrl($refererUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function generatePermalink($text)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'generatePermalink', [$text]);

        return parent::generatePermalink($text);
    }

    /**
     * {@inheritDoc}
     */
    public function getImportId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImportId', []);

        return parent::getImportId();
    }

    /**
     * {@inheritDoc}
     */
    public function setImportId($importId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImportId', [$importId]);

        return parent::setImportId($importId);
    }

}
